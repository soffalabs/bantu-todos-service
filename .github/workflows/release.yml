name: release
on:
  push:
   tags:
    - v*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_VERSION: ${{ github.run_number }}
  SONATYPE_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  SIGNING_KEYID: ${{ secrets.OSSRH_SIGNING_KEYID }}
  SIGNING_PASSWORD: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
  SONATYPE_GPG: ${{ secrets.SOFFA_GPG_SIGNING_KEY }}

jobs:
#  check:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v2
#        with:
#          java-version: '8'
#          distribution: 'adopt'
#      - name: Run checks
#        run: NO_PUBLISH=true gradle check

#  publish-to-sonatype:
#    needs: check
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - uses: actions/checkout@v2
#      - name: Publish artifact to public Sonatype Nexus
#        run: |
#          echo $SONATYPE_GPG | base64 -d > $HOME/.sonatype-keys.gpg
#          gradle sign -x check publishMavenPublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository -Psonatype=true \
#            -PossrhUsername=$SONATYPE_USERNAME \
#            -PossrhPassword=$SONATYPE_PASSWORD \
#            -Psigning.keyId=$SIGNING_KEYID  \
#            -Psigning.password=$SIGNING_PASSWORD \
#            -Psigning.secretKeyRingFile=$HOME/.sonatype-keys.gpg

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image to GitHub Container Registry
        run: |
          gradle jib --image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} -Djib.to.tags="${{ env.IMAGE_VERSION }},latest" -x test \
          -PossrhUsername=foo -PossrhPassword=foo -Psigning.keyId=foo -Psigning.password=foo -Psigning.secretKeyRingFile=foo -Pverbose=true
        env:
          PKG_TOKEN: ${{ secrets.PKG_TOKEN }}
